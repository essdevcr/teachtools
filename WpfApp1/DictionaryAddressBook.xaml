<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:AddressBookW">

        <Style TargetType="Button">
            <Setter Property="Background" Value="DarkSlateBlue"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Width" Value="139"/>
            <Setter Property="Height" Value="30"/>
        </Style>
    <Style TargetType="DataGrid" x:Key="DataGridStyle">
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="Background" Value="DarkGray"/>
        <Setter Property="HorizontalGridLinesBrush" Value="#FF688CAF"/>
        <Setter Property="VerticalGridLinesBrush" Value="LightGray"/>
        <Setter Property="FontSize" Value="22"/>
    </Style>

    <Style TargetType="TextBox" x:Key="ErrorTextBoxStyle">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip"
                Value="{Binding RelativeSource={RelativeSource Self},
                    Path=(Validation.Errors)[0].ErrorContent}" />
                <Setter Property="BorderBrush" Value="Red"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="Exploide">
        <Setter Property="Background" Value="DarkSlateBlue"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Width" Value="139"/>
        <Setter Property="Height" Value="30"/>
    </Style>
    <Style x:Key="FontStyle22" TargetType="{x:Type Window}">
        <Setter Property="FontFamily"
        Value="Comic Sans MS" />
        <Setter Property="FontSize"
        Value="22" />
    </Style>
    <Style x:Key="Labelstyle22m" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="FontFamily" Value="Arial Narrow"/>
        <Setter Property="Foreground" Value="Gray"/>
    </Style>
           
    <LinearGradientBrush x:Key="NormalBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFF" Offset="0.0"/>
        <GradientStop Color="#CCC" Offset="1.0"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PressedBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#BBB" Offset="0.0"/>
        <GradientStop Color="#EEE" Offset="0.1"/>
        <GradientStop Color="#EEE" Offset="0.9"/>
        <GradientStop Color="#FFF" Offset="1.0"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="NormalBorderBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#CCC" Offset="0.0"/>
        <GradientStop Color="#444" Offset="1.0"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="BorderBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#CCC" Offset="0.0"/>
        <GradientStop Color="#444" Offset="1.0"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PressedBorderBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#444" Offset="0.0"/>
        <GradientStop Color="#888" Offset="1.0"/>
    </LinearGradientBrush>

    <Style x:Key="SimpleButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="Background" Value="{StaticResource PressedBorderBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Grid">
                        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"/>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource PressedBrush}" TargetName="Border"/>
                            <Setter Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" TargetName="Border"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property = "Background" Value="Red"/>
                            <Setter Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" TargetName="Border"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonPanelStyle" TargetType="Button">
        <Setter Property="Width" Value="104"/>
        <Setter Property="Height" Value="110"/>
        <Setter Property="Background" Value="#FF98B3B1"/>
    </Style>

    <SolidColorBrush x:Key="MenuBrush" Color="#FF98B3B1"/>
</ResourceDictionary>